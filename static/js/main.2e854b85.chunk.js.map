{"version":3,"sources":["components/CreateHotDogForm/validate.js","components/CreateHotDogForm/asyncValidate.js","components/CreateHotDogForm/index.js","components/RemoteSubmitButton/index.js","redux/actions.js","redux/store.js","redux/reducer.js","components/HotDogItem/index.js","components/HotDogList/index.js","App.js","reportWebVitals.js","index.js"],"names":["validate","values","errors","name","title","description","image","asyncValidate","ms","htdsnames","JSON","stringify","window","localStorage","getItem","console","log","Promise","resolve","setTimeout","then","includes","Error","renderField","input","type","placeholder","meta","asyncValidating","touched","error","className","style","margin","renderFieldDescription","width","rows","reduxForm","form","asyncBlurFields","props","handleSubmit","onSubmit","Field","component","connect","dispatch","onClick","submit","GET_HOTDOGS","EDIT_HOTDOG","getHotDogs","getState","fetch","method","response","json","data","payload","setItem","middlewares","logger","thunk","rootreducer","combineReducers","reducerget","state","action","hotdogs","formReducer","store","createStore","compose","applyMiddleware","HotDogItem","hotdog","useState","hname","setHname","htitle","setHtitle","hdescription","setHdescription","himage","setHimage","editable","setEditable","src","alt","headers","Accept","body","hotdogId","hotdog_id","required","value","onChange","e","target","HotDogList","useSelector","map","customStyles","content","position","top","left","right","bottom","marginRight","transform","backgroundColor","App","modalIsOpen","setModalIsOpen","setModalIsOpenToFalse","isOpen","onRequestClose","Modal","setAppElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e854b85.chunk.js","sourcesContent":["const validate = values => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = 'Required';\r\n    }\r\n    if (!values.title) {\r\n        errors.title = 'Required';\r\n      }\r\n      if (!values.description) {\r\n        errors.description = 'Required';\r\n      }  \r\n      if (!values.image) {\r\n        errors.image = 'Required';\r\n      }\r\n    return errors;\r\n  };\r\n  \r\n  export default validate;\r\n  ","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst asyncValidate = (values /*, dispatch */) => {\r\n  const htdsnames = JSON.stringify(window.localStorage.getItem('htds'));\r\nconsole.log(htdsnames);\r\n  return sleep(1000).then(() => {\r\n    // simulate server latency\r\n    if (htdsnames.includes(values.name)) {\r\n      throw new Error({ name: 'That username is taken' })\r\n    }\r\n  })\r\n}\r\n\r\nexport default asyncValidate;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport validate from './validate';\r\nimport asyncValidate from './asyncValidate';\r\n\r\n\r\n\r\n\r\n\r\nconst renderField = ({ input, type, placeholder, meta: { asyncValidating, touched, error } }) => (\r\n  <div>\r\n    <div className={asyncValidating ? 'async-validating' : ''}>\r\n      <input {...input} type={type} placeholder={placeholder} className=\"formmodal\" />\r\n      </div>\r\n      {touched && error && <span style={{margin: '0.5rem'}}>{error}</span>}\r\n   \r\n  </div>\r\n);\r\n\r\n\r\nconst renderFieldDescription = ({ input, placeholder, meta: { touched, error } }) => (\r\n  <div>\r\n    <div>\r\n      <textarea style={{width: '85%'}} {...input} rows='5' placeholder={placeholder} className=\"formmodal\" type='text' />\r\n      </div>\r\n      {touched && error && <span style={{margin: '0.5rem'}}>{error}</span>}\r\n   \r\n  </div>\r\n);\r\n\r\n\r\nconst CreateHotDogForm = props => {\r\n  const { handleSubmit } = props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n      <p className='hotdogname' style={{ margin: '0.5rem' }}>\r\n        Add new hot-dog\r\n      </p>\r\n      <Field name='name' type='text' component={renderField} placeholder='Name' />\r\n      <Field name='title' type='number' component={renderField} placeholder='Title' />\r\n      <Field name='description' type='text' component={renderFieldDescription} placeholder='Description' />\r\n      <Field name='image' type='text' component={renderField} placeholder='Image'  />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'AddNewHotDog',\r\n  validate,\r\n  asyncValidate,\r\n  asyncBlurFields: ['name'],\r\n})(CreateHotDogForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { submit } from 'redux-form';\r\n\r\nconst RemoteSubmitButton = ({ dispatch }) => (\r\n  <button type='button' className='modalbtn' onClick={() => dispatch(submit('AddNewHotDog'))}>\r\n    Submit\r\n  </button>\r\n);\r\n\r\nexport default connect()(RemoteSubmitButton);\r\n","export const GET_HOTDOGS = 'GET_HOTDOGS';\r\nexport const EDIT_HOTDOG = 'EDIT_HOTDOG';\r\n\r\nexport function editHotdog(data) {\r\n  return {\r\n    type: EDIT_HOTDOG,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport const getHotDogs = () => {\r\n  console.log('getHotDogs');\r\n\r\n  return (dispatch, getState) => {\r\n    console.log('current state:', getState());\r\n    return fetch('http://localhost:5000/', {method: 'get'})\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch({ type: 'GET_HOTDOGS', payload: data });\r\n        window.localStorage.setItem('htds', JSON.stringify(data));\r\n      });\r\n  };\r\n};\r\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { hotdogs } from './reducer';\r\nimport { reducerget } from './reducer';\r\nimport thunk from 'redux-thunk';\r\nconst middlewares = [logger, thunk];\r\nlet rootreducer = combineReducers({ reducerget, hotdogs, form: formReducer });\r\nexport let store = createStore(\r\n  rootreducer,\r\n  { hotdogs: {} },\r\n  compose(applyMiddleware(...middlewares), /*window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()*/)\r\n);\r\n","import {EDIT_HOTDOG, GET_HOTDOGS} from './actions';\r\n\r\nexport function reducerget (state = [], action) {\r\n  switch (action.type) {\r\n    case GET_HOTDOGS:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function hotdogs (state = {}, action) {\r\n  switch (action.type) {\r\n      case EDIT_HOTDOG:    \r\n       return action.payload\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useState } from 'react';\r\nimport { store } from '../../redux/store';\r\nimport { getHotDogs } from '../../redux/actions';\r\n\r\n\r\nfunction HotDogItem({ hotdog}) {\r\nconst [hname, setHname] = useState(hotdog.name)\r\nconst [htitle, setHtitle] = useState(hotdog.title)\r\nconst [hdescription, setHdescription] = useState(hotdog.description)\r\nconst [himage, setHimage] = useState(hotdog.image)\r\n  const [editable, setEditable] = useState(false);\r\n  const updateHotDog = (values) => {\r\n    fetch('http://localhost:5000/update-hotdog', {\r\n      method: 'put',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ hotdogId: hotdog.hotdog_id, name: hname, description: hdescription, title: htitle, image: himage }),\r\n    })\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (data) {\r\n        setEditable(!editable)\r\n        store.dispatch(getHotDogs());\r\n      });\r\n  }\r\n\r\n  const deleteHotDog = () => {\r\n    fetch('http://localhost:5000/delete-hotdog', {\r\n      method: 'delete',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ hotdogId: hotdog.hotdog_id }),\r\n    }).then((data) => {\r\n      console.log(data);\r\n      store.dispatch(getHotDogs());\r\n    });\r\n  };\r\n  return (\r\n    <div className='hotdog-container'>\r\n      <div className='imager'>\r\n        <img src={hotdog.image} alt=\"\" className='oneimage' />\r\n      </div>\r\n      {editable ? (<div>\r\n        <form onSubmit={updateHotDog}>\r\n        <input\r\n        required\r\n        name='name'\r\n        className='form'\r\n          type=\"text\"\r\n          value={hname}\r\n          onChange={e => setHname(e.target.value)}\r\n        />\r\n                <input\r\n        required\r\n        name='htitle'\r\n        className='form'\r\n          type=\"number\"\r\n          value={htitle}\r\n          onChange={e => setHtitle(e.target.value)}\r\n        />\r\n                        <textarea\r\n        required\r\n        name='hdescription'\r\n        className='form'\r\n        rows='10'\r\n          type='text'\r\n          value={hdescription}\r\n          onChange={e => setHdescription(e.target.value)}\r\n        />\r\n                <input\r\n        required\r\n        name='himage'\r\n        className='form'\r\n          type=\"text\"\r\n          value={himage}\r\n          onChange={e => setHimage(e.target.value)}\r\n        />\r\n    <div className='btns'>\r\n              <button type='sumbit' className='btn'>\r\n                Update\r\n              </button>\r\n            </div>\r\n    </form>\r\n\r\n    <div className='btns'>\r\n              <button className='btn' onClick={deleteHotDog}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n          ) :(\r\n<div>\r\n          <div className='hotdogname'>\r\n            <p>{hotdog.name}</p>\r\n          </div>\r\n      <div><p>{hotdog.title}$</p></div>\r\n      <div>\r\n <p>{hotdog.description}</p>\r\n      </div>\r\n      <div className='btns'>\r\n            <button className='btn' onClick={() => setEditable(!editable)}>\r\n              Edit\r\n            </button>\r\n          </div>\r\n          </div>\r\n          \r\n      )}\r\n</div>\r\n  );\r\n}\r\n\r\nexport default (HotDogItem);\r\n","import React from 'react';\r\nimport HotDogItem from '../HotDogItem';\r\nimport { useSelector } from 'react-redux';\r\nfunction HotDogList() {\r\n  let hotdogs = useSelector((state) => state.reducerget);\r\n  return (\r\n    <div className='cards'>\r\n      {hotdogs.map((hotdog) => {\r\n        return <HotDogItem key={hotdog.hotdog_id} hotdog={hotdog} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default (HotDogList);","import './App.css';\r\nimport React, { useState, Fragment } from 'react';\r\nimport CreateHotDogForm from './components/CreateHotDogForm';\r\nimport Modal from 'react-modal';\r\nimport RemoteSubmitButton from './components/RemoteSubmitButton';\r\nimport HotDogList from './components/HotDogList';\r\nimport { store } from './redux/store';\r\nimport { getHotDogs } from './redux/actions';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n};\r\n\r\nModal.setAppElement('#root');\r\nexport default function App() {\r\n  const createHotDog = (values) => {\r\n    fetch('http://localhost:5000/add-hotdog', {\r\n      method: 'post',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name: values.name, description: values.description, title: values.title, image: values.image }),\r\n    })\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (data) {\r\n        setModalIsOpenToFalse();\r\n        store.dispatch(getHotDogs());\r\n      });\r\n  };\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const setModalIsOpenToTrue = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const setModalIsOpenToFalse = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='topnav'>\r\n        <ul>\r\n          <ul onClick={setModalIsOpenToTrue}>Add hotdog</ul>\r\n        </ul>\r\n      </div>\r\n      <HotDogList />\r\n      <Modal isOpen={modalIsOpen} style={customStyles} onRequestClose={() => setModalIsOpen(false)}>\r\n        <div>\r\n          <Fragment>\r\n            <CreateHotDogForm onSubmit={createHotDog} />\r\n          </Fragment>\r\n          <div className='flexcenter'>\r\n            <button onClick={setModalIsOpenToFalse} className='modalbtn'>\r\n              No thanks\r\n            </button>\r\n            <RemoteSubmitButton />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux'; \r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from './redux/store'\r\nimport {getHotDogs} from './redux/actions'\r\nstore.dispatch(getHotDogs())\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n<Provider store={store}>  \r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}